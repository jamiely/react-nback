{"version":3,"sources":["Game.tsx","components/Grid.tsx","components/Choose.tsx","components/InfoBar.tsx","components/History.tsx","util.tsx","components/Score.tsx","components/Controls.tsx","components/Instructions.tsx","components/GameComponent.tsx","components/Home.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["MatchState","MatchType","availableCellTexts","audioChoices","initialMatchStatus","round","state","None","getRandomSymbol","row","Math","floor","random","column","text","getRandomCellText","location","audio","getRandomAudio","index","length","getIndexFromPosition","position","checkNBack","game","matchType","current","matchState","matchStatus","score","Location","roundsBack","history","symbolNRoundsBack","symbol","currentLocation","isLocationMatch","Symbol","isTextMatch","Audio","isAudioMatch","console","error","isMatch","NoMatch","Match","matchHistory","concat","symbolIndex","getNextSymbol","Cell","className","Grid","props","cells","Array","map","_","i","undefined","Choose","onClick","InfoBar","onLocationClick","onSymbolClick","onAudioClick","children","HistoryItemComponent","historyItem","historyIndex","n","otherClassName","History","slice","useKeyPress","keys","action","useEffect","onKeyup","e","indexOf","key","window","addEventListener","removeEventListener","Score","Controls","Instructions","synth","speechSynthesis","voices","getVoices","getMatchLabel","lastMatchStatus","getLastMatchStatus","messages","GameComponent","originalGame","useState","setGame","delayOption","setDelayOption","onLocationCheckClick","onSymbolCheckClick","onAudioCheckClick","delay","callback","savedCallback","useRef","id","setInterval","clearInterval","useInterval","newGame","newRound","word","voiceIndex","volume","log","utterThis","SpeechSynthesisUtterance","voice","speak","say","onChange","evt","parseInt","target","value","isNaN","label","option","selected","style","height","Home","href","createBrowserHistory","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18f52b92.chunk.js","sourcesContent":["\nconst availableCellTexts = ['💩', '🍉', '🔥', '😅', '🐒', '🌈', '🍏', '⚽'];\nconst audioChoices = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J'];\n\nexport enum MatchState {\n    None = \"\",\n    Match = \"Match\",\n    NoMatch = \"NoMatch\",\n};\n\ninterface MatchStatus {\n    round: number;\n    state: MatchState;\n};\n\nexport enum MatchType {\n    Symbol = \"symbol\",\n    Location = \"location\",\n    Audio = 'audio',\n};\n\nexport const initialMatchStatus: MatchStatus = {round: 0, state: MatchState.None};\n\nexport interface HistoryItem {\n    symbol: Symbol;\n    matchState: MatchState;\n};\n\nexport interface Game {\n    round: number;\n    // past symbols\n    history: HistoryItem[];\n    // current symbols\n    current: HistoryItem;\n    // n-back\n    roundsBack: number;\n    matchHistory: MatchStatus[];\n    score: number;\n}\n\nexport function getSymbols(game: Game): Symbol[] {\n    return game.history.map(h => h.symbol);\n}\n\nexport function getLastMatchStatus({matchHistory}: Game): MatchStatus {\n    if(matchHistory.length === 0) return initialMatchStatus;\n\n    return matchHistory[matchHistory.length - 1];\n}\n\nexport interface Position {\n    row: number;\n    column: number;\n}\n\nexport interface Symbol {\n    text: string;\n    location: Position;\n    audio: string;\n}\n\nexport function getRandomSymbol(): Symbol {\n    const row = Math.floor(Math.random() * 3);\n    const column = Math.floor(Math.random() * 3);\n\n    return {\n        text: getRandomCellText(), \n        location: {row, column},\n        audio: getRandomAudio(),\n    };\n}\n\nfunction getRandomAudio(): string {\n    const index = Math.floor(Math.random() * audioChoices.length);\n    return audioChoices[index];\n}\n\nexport function getIndexFromPosition(position: Position) {\n    return position.row * 3 + position.column;\n}\n\n// returns true if n-back is true at this point\nexport function isMatch(game: Game, matchType: MatchType) {\n    if(matchType === MatchType.Location) return isLocationMatch(game);\n    if(matchType === MatchType.Symbol) return isTextMatch(game);\n    if(matchType === MatchType.Audio) return isAudioMatch(game);\n\n    console.error(`Unrecognized match type ${matchType}`);\n    return false;\n}\n\nfunction isTextMatch({roundsBack, history, current}: Game) {\n    if(roundsBack-1 >= history.length) return false;\n    const symbolNRoundsBack = history[roundsBack - 1].symbol;\n    return symbolNRoundsBack.text === current.symbol.text;\n}\n\nfunction isAudioMatch({roundsBack, history, current}: Game) {\n    if(roundsBack-1 >= history.length) return false;\n    const symbolNRoundsBack = history[roundsBack - 1].symbol;\n    return symbolNRoundsBack.audio === current.symbol.audio;\n}\n\nfunction isLocationMatch({roundsBack, history, current}: Game) {\n    if(roundsBack-1 >= history.length) return false;\n    const symbolNRoundsBack = history[roundsBack - 1].symbol;\n    const currentLocation = current.symbol.location;\n    return symbolNRoundsBack.location.row === currentLocation.row &&\n        symbolNRoundsBack.location.column === currentLocation.column;\n}\n\nexport function createGame(): Game {\n    return {\n        round: 1,\n        current: {\n            matchState: MatchState.None,\n            symbol: {\n                ...getRandomSymbol(),\n                location: {row: 0, column: 0},\n            },\n        },\n        history: [],\n        roundsBack: 2, // defaults to 2 back\n        matchHistory: [],\n        score: 0,\n    };\n}\n\nexport function checkNBack(game: Game, matchType: MatchType): Game {\n    // we already tried a match\n    if(game.current.matchState !== MatchState.None) return game;\n\n    let matchStatus = {round: game.round, state: MatchState.None};\n    let score = game.score;\n    let current = {...game.current};\n    if(! isMatch(game, matchType)) {\n        current.matchState = matchStatus.state = MatchState.NoMatch;\n    }\n    else {\n        current.matchState = matchStatus.state = MatchState.Match;\n        score += 1;\n    }\n    return {\n        ...game,\n        current,\n        score,\n        matchHistory: game.matchHistory.concat([matchStatus])\n    };\n}\n\nfunction getRandomCellText() {\n    const symbolIndex = Math.floor(Math.random() * availableCellTexts.length);\n    return availableCellTexts[symbolIndex];\n}\n\nfunction getNextSymbol(game: Game): Symbol {\n    const location = game.current.symbol.location;\n    const symbol = getRandomSymbol();\n    if(location.row === symbol.location.row \n        && location.column === symbol.location.column) {\n        return getNextSymbol(game);\n    }\n\n    return symbol;\n}\n\nexport function newRound(game: Game): Game {\n    return {\n        ...game,\n        round: game.round + 1,\n        current: {symbol: getNextSymbol(game), matchState: MatchState.None},\n        history: [\n            game.current,\n            ...game.history\n        ]\n    }\n}\n","import './Grid.css';\nimport {Symbol, getIndexFromPosition} from '../Game';\n\ninterface CellProps {\n    symbol: Symbol | undefined;\n}\n\nconst Cell = ({symbol}: CellProps) => {\n    return <div className=\"cell\">{symbol?.text}</div>\n}\n\nexport interface GridProps {\n    symbol: Symbol\n};\n\nconst Grid = (props: GridProps) => {\n    const index = getIndexFromPosition(props.symbol.location);\n    const cells = [...Array(9)].map((_, i) => {\n        const symbol = index === i ? props.symbol : undefined;\n        return <Cell key={i} symbol={symbol} />\n    });\n    return <div className=\"gridContainer\">\n        <div className=\"grid\">{cells}</div>\n    </div>;\n}\n\nexport default Grid;\n","interface ChooseProps {\n    text: string;\n    onClick: () => void;\n}\n\nfunction Choose({text, onClick}: ChooseProps) {\n    return <div><button onClick={onClick}>{text}</button></div>;\n}\n\nexport default Choose;\n\n","import React from \"react\";\nimport Choose from \"./Choose\";\nimport './InfoBar.css';\n\ninterface InfoBarProps {\n    onLocationClick: () => void;\n    onSymbolClick: () => void;\n    onAudioClick: () => void;\n    children?: any;\n}\n\nfunction InfoBar(props: InfoBarProps) {\n    return <div className=\"infoBar\">\n        2-Back \n        <Choose onClick={props.onLocationClick} text=\"(L)ocation\" />\n        <Choose onClick={props.onSymbolClick} text=\"Symbol (K)\" />\n        <Choose onClick={props.onAudioClick} text=\"Audio (J)\" />\n        {props.children}\n    </div>;\n}\nexport default InfoBar;","import { Game, getIndexFromPosition, HistoryItem } from \"../Game\";\nimport './History.css';\n\ninterface HistoryProps {\n    game: Game;\n};\n\ninterface HistoryItemProps {\n    historyItem: HistoryItem;\n    historyIndex: number;\n};\n\nfunction HistoryItemComponent({historyItem, historyIndex}: HistoryItemProps) {\n    const index = getIndexFromPosition(historyItem.symbol.location);\n\n    function getCell(_: any, i: number) {\n        let otherClassName = '';\n        let text = '\\u00A0';\n        if(index === i) {\n            otherClassName = ' selected';\n            text = historyItem.symbol.text;\n        }\n\n        return <div className={`cell ${otherClassName}`} key={i}>\n            {text}\n        </div>;\n    }\n\n    const n = historyIndex + 1;\n\n    return <div className={`historyItem historyItem-${historyIndex} matchStatus-${historyItem.matchState}`}>\n        {n}-back\n        <div className=\"grid\">\n        {[...Array(9)].map(getCell)}\n        </div>\n        <div className=\"audio\">{historyItem.symbol.audio}</div>\n    </div>;\n}\n\nfunction History({game}: HistoryProps) {\n    const history = game.history.slice(0, 10);\n    return <div className=\"history\">\n        <h3>History</h3>\n        <HistoryItemComponent historyItem={game.current} historyIndex={-1} />\n        {history.map((historyItem, historyIndex) => HistoryItemComponent({historyItem, historyIndex}))}\n    </div>\n};\n\nexport default History;\n","import { useEffect, useRef } from 'react';\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport function useInterval(callback: Function, delay: number | null) {\n  const savedCallback = useRef<Function>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if(!savedCallback) return;\n      if(!savedCallback.current) return;\n\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n// Adapted from\n// https://www.caktusgroup.com/blog/2020/07/01/usekeypress-hook-react/\n/**\n * useKeyPress\n * @param {string} key - the name of the key to respond to, compared against event.key\n * @param {function} action - the action to perform on key press\n */\n export function useKeyPress(keys: string[], action: Function) {\n  useEffect(() => {\n    function onKeyup(e: KeyboardEvent) {\n      if(keys.indexOf(e.key) === -1) return;\n      action();\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => window.removeEventListener('keyup', onKeyup);\n  }, [action, keys]);\n}\n","import './Score.css';\n\ninterface ScoreProps {\n    score: number;\n}\n\nfunction Score({score}: ScoreProps) {\n    return <div className=\"score\">{score}</div>\n}\n\nexport default Score;","function Controls() {\n    return <div>\n      <ul>\n        <li>p - Pause</li>\n        <li>l - Location match</li>\n      </ul>\n    </div>;\n}\n\nexport default Controls;\n","function Instructions() {\n    return <div>\n        <p>\n            A sequence of things will play out.\n            Remember what happened 2 rounds ago!\n            If the same thing that is happening\n            now happened 2 rounds ago, click the\n            corresponding button. For example, if\n            the symbol is in the same location as\n            2 rounds ago, click the Location button.\n            If the audio is the same as 2 rounds ago,\n            click the Audio button. If the symbol\n            matches the symbol 2 rounds ago, click\n            the symbol button.\n        </p>\n    </div>;\n}\n\nexport default Instructions;\n","import { ChangeEvent, useState } from 'react';\nimport './GameComponent.css';\nimport Grid from './Grid';\nimport InfoBar from './InfoBar';\nimport History from './History';\nimport { newRound, Game, checkNBack, getLastMatchStatus, MatchState, MatchType } from '../Game';\nimport { useInterval, useKeyPress } from '../util';\nimport Score from './Score';\nimport Controls from './Controls';\nimport Instructions from './Instructions';\n\nconst synth = window.speechSynthesis;\nconst voices = synth?.getVoices();\n\nfunction say(word: string, voiceIndex: number, volume: number) {\n  console.log(`Voice index ${voiceIndex} volume ${volume}`);\n  const utterThis = new SpeechSynthesisUtterance(word);\n  utterThis.voice = voices[voiceIndex ?? 0];\n  utterThis.volume = volume;\n  synth.speak(utterThis);\n}\n\nexport interface GameComponentProps {\n  game: Game\n};\n\nfunction getMatchLabel(game: Game) {\n  const lastMatchStatus = getLastMatchStatus(game);\n  // only show the match label if it was recent\n\n  if(lastMatchStatus.round < game.round - 1) {\n    return <></>;\n  }\n\n  const messages: {[key: string]: string} = {};\n  messages[MatchState.Match] = `That was a ${game.roundsBack}-back!`;\n  messages[MatchState.NoMatch] = \"That wasn't a match.\";\n\n  return <div>{messages[lastMatchStatus.state]}</div>;\n}\n\nfunction GameComponent({game: originalGame}: GameComponentProps) {\n  const [game, setGame] = useState(originalGame);\n  const [delayOption, setDelayOption] = useState<number|null>(2000);\n\n  const delayOptions = [\n    {delay: 3000, label: 'Slow'},\n    {delay: 2000, label: 'Medium'},\n    {delay: 1500, label: 'Fast'}\n  ];\n\n  function onLocationCheckClick() {\n    setGame(game => checkNBack(game, MatchType.Location));\n  }\n  function onSymbolCheckClick() {\n    setGame(game => checkNBack(game, MatchType.Location));\n  }\n  \n  function onAudioCheckClick() {\n    setGame(game => checkNBack(game, MatchType.Audio));\n  }\n\n  useKeyPress(['k', 'K'], onSymbolCheckClick);\n  useKeyPress(['L', 'l'], onLocationCheckClick);\n  useKeyPress(['J', 'j'], onAudioCheckClick);\n\n  useKeyPress(['p', 'P'], () => {\n    setDelayOption(delay => delay ? null : 2000);\n  });\n\n  useInterval(() => {\n    const newGame = newRound(game);\n    setGame(newGame);\n    say(newGame.current.symbol.audio, 0, 1);\n  }, delayOption);\n\n  function onDelayChange(evt: ChangeEvent<HTMLSelectElement>) {\n    let delay = parseInt(evt.target.value);\n    if(isNaN(delay)) delay = 2000;\n    setDelayOption(delay);\n  }\n\n  return (\n    <div className=\"App\">\n      <Score score={game.score} />\n      <div className=\"round\">Round: {game.round}</div>\n      <div className=\"main\">\n        <Grid symbol={game.current.symbol} />\n      </div>\n      <InfoBar \n        onLocationClick={onLocationCheckClick}\n        onSymbolClick={onSymbolCheckClick}\n        onAudioClick={onAudioCheckClick}>\n        {getMatchLabel(game)}\n      </InfoBar>\n      <History game={game} />\n      <label>Delay \n        <select onChange={onDelayChange}>\n          {delayOptions.map(option => \n             <option value={option.delay} \n              key={option.delay}\n              selected={option.delay === delayOption}\n              >\n                {option.label}\n              </option>)}\n          <option selected={!delayOption}>Paused</option>\n        </select>\n      </label>\n      <h2>Controls</h2>\n      <Controls />\n      <h2>Instructions</h2>\n      <Instructions />\n\n      <div style={{height: '100px'}}></div>\n    </div>\n  );\n}\n\nexport default GameComponent;\n","import Instructions from \"./Instructions\";\n\nfunction Home() {\n    return <div>\n        <h2>What is NBack?</h2>\n\n        <blockquote>\n            The n-back task is a continuous performance task that is commonly used\n            as an assessment in psychology and cognitive neuroscience to measure a\n            part of working memory and working memory capacity. The n-back was\n            introduced by Wayne Kirchner in 1958. Some researchers have argued\n            that n-back training may increase IQ, but evidence is mixed.\n\n            - https://en.wikipedia.org/wiki/N-back\n        </blockquote>\n\n        <h2>Play</h2>\n        <a href=\"/game\">Let's play</a>\n\n        <h2>Instructions</h2>\n        <Instructions />\n    </div>\n}\n\nexport default Home;\n","import { Route, Router, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Game } from '../Game';\nimport GameComponent from './GameComponent';\nimport Home from './Home';\nimport { createBrowserHistory } from 'history';\n\ninterface AppProps {\n    game: Game;\n}\n\nconst history = createBrowserHistory();\n\nfunction App({game}: AppProps) {    \n    return <Router history={history}>\n        <h1>Triple {game.roundsBack}-back</h1>\n        <Link to=\"/\">Home</Link> | <Link to=\"/game\">Play</Link>\n        <Switch>\n            <Route path=\"/game\">\n                <GameComponent game={game} />\n            </Route>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n        </Switch>\n    </Router>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGame } from './Game';\n\nconst game = createGame();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App game={game} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}